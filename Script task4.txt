-- Table: public.bitacora_tareas /* creamos un log para almacenar los cambios que se haran en la tabla tareas*/

-- DROP TABLE IF EXISTS public.bitacora_tareas;

CREATE TABLE IF NOT EXISTS public.bitacora_tareas
(
    cod_tarea integer NOT NULL DEFAULT nextval('bitacora_tareas_cod_tarea_seq'::regclass),
    accion character varying(10) COLLATE pg_catalog."default" NOT NULL,
    id_tarea integer,
    fecha timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT bitacora_tareas_pkey PRIMARY KEY (cod_tarea)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.bitacora_tareas
    OWNER to sisinfo2_user;







-- Table: public.tareas/*creamos la tabla y trigger tarea*/

-- DROP TABLE IF EXISTS public.tareas;

CREATE TABLE IF NOT EXISTS public.tareas
(
    id integer NOT NULL DEFAULT nextval('tareas_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    estado character varying(20) COLLATE pg_catalog."default" DEFAULT 'Pendiente'::character varying,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tareas_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tareas
    OWNER to sisinfo2_user;

-- Trigger: tr_tareas

-- DROP TRIGGER IF EXISTS tr_tareas ON public.tareas;

CREATE TRIGGER tr_tareas
    AFTER INSERT OR DELETE OR UPDATE 
    ON public.tareas
    FOR EACH ROW
    EXECUTE FUNCTION public.tr_tareas();



CREATE OR REPLACE FUNCTION tr_tareas() /*funcion del trigger*/
RETURNS TRIGGER AS $$
BEGIN
    
    IF (TG_OP = 'INSERT') THEN
        INSERT INTO bitacora_tareas (accion, id_tarea, fecha)
        VALUES ('INSERT', NEW.id, CURRENT_TIMESTAMP);
    
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO bitacora_tareas (accion, id_tarea, fecha)
        VALUES ('UPDATE', OLD.id, CURRENT_TIMESTAMP);
    
    ELSIF (TG_OP = 'DELETE') THEN
        INSERT INTO bitacora_tareas (accion, id_tarea, fecha)
        VALUES ('DELETE', OLD.id, CURRENT_TIMESTAMP);
    
    END IF;
    
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;